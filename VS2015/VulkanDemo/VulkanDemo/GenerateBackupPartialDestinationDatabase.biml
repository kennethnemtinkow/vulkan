<Biml xmlns="http://schemas.varigence.com/biml.xsd">
  <!--connection to get databases to generate packages for-->
  
    <!-- ConfigConnString:  Add the connection to your config server/database here  -->

 
  <# 
    String ConfigConnString="Data Source=sql2016dev1;Initial Catalog=VulkanConfig;Integrated Security=SSPI;Persist Security Info=False;Provider=SQLOLEDB.1"; 
	DataTable backupList = ExternalDataAccess.GetDataTable(ConfigConnString, "SELECT DISTINCT SubSystemName, DestinationServer, DestinationDatabase, CASE WHEN FullOrPartialBackup = 'Partial' THEN 'PARTIAL' ELSE 'FULL' END AS PartialBackupRestore, BackupFilePathBakFileDestinationServer FROM [vulkan].[BackupRestorePartialDatabaseConfiguration] WHERE Active = 'y'");
	DataTable databaseList = ExternalDataAccess.GetDataTable(ConfigConnString, "SELECT DISTINCT DestinationServer, DestinationDatabase FROM [vulkan].[BaseConfiguration] WHERE Active = 'y'");
	DataTable serverList = ExternalDataAccess.GetDataTable(ConfigConnString, "SELECT DISTINCT DestinationServer FROM [vulkan].[BaseConfiguration] WHERE Active = 'y'");
  #>
  <Connections>
	<# foreach(DataRow db in databaseList.Rows) {
			String srvr = db["DestinationServer"].ToString();
			String dbName = db["DestinationDatabase"].ToString();
	#>
    <Connection Name="<#=srvr#>.<#=dbName#>" ConnectionString="Data Source=<#=srvr#>;Initial Catalog=<#=dbName#>;Integrated Security=SSPI;Persist Security Info=False;Provider=SQLOLEDB.1" />
    <#}#>
	<# foreach(DataRow srv in serverList.Rows) {
			String srvr = srv["DestinationServer"].ToString();
	#>
	<Connection Name="<#=srvr#>.master" ConnectionString="Data Source=<#=srvr#>;Initial Catalog=master;Integrated Security=SSPI;Persist Security Info=False;Provider=SQLOLEDB.1" />
	<#}#>
    </Connections>
  <Packages>
  
   <!-- ConnString:  Add the connection to your config server/database here  -->
   
   
    <# foreach(DataRow bck in backupList.Rows) {
			String srvr = bck["DestinationServer"].ToString();
			String subSystem = bck["SubSystemName"].ToString();
			String dbName = bck["DestinationDatabase"].ToString();
			String PartialOrFull = bck["PartialBackupRestore"].ToString();
			String bckPath = bck["BackupFilePathBakFileDestinationServer"].ToString();
			String fullPath = bckPath + dbName + ".bak";
			String ConnString="Data Source=sql2016dev1;Initial Catalog=VulkanConfig;User Id=vulkanbiml;Password=TitanStopSign2%;Persist Security Info=False"; 
			String sql = @"SELECT COALESCE(STUFF((
									SELECT DISTINCT CONCAT(',', CHAR(10), ' FILEGROUP = ''', FileGroupsToBackupRestore, '''')
									FROM vulkan.DatabaseFilesConfiguration
									WHERE SubSystemName = @SubSystem
									AND [Database] = @Database
									AND Type = 'DataFile'
									AND Active = 'y'
									FOR XML PATH('')
								), 1, 1, ''), '')";
			
			String fileGroups;  
			using (var con = new SqlConnection(ConnString)) {
				using (var cmd = new SqlCommand(sql, con)) {
					cmd.Parameters.AddWithValue("@SubSystem", subSystem);
					cmd.Parameters.AddWithValue("@Database", dbName);
					con.Open();
					fileGroups = (String)cmd.ExecuteScalar();
				}
			}
		
	#>
	<Package Name="BackupPartialDestinationDatabase_<#=subSystem#>_<#=dbName#>" Language="None" ProtectionLevel="EncryptSensitiveWithUserKey" SsisPackageType="5" VersionBuild="14" CreatorName="SPVEST\kennem" CreatorComputerName="UTVPC09QEDF" CreationDate="2016-09-02T10:14:18">
       
	  <Variables>
           <Variable Name="LogServerConnectionstring" DataType="String" IncludeInDebugDump="Exclude">Data Source=utvsql195dwh.spvutvikling.no;Initial Catalog=ConfigLog;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</Variable>
       <Variable Name="CurrentRecoveryMode" DataType="String" IncludeInDebugDump="Exclude">FULL</Variable>
        <Variable Name="FilePathBakFileDestinationServer" DataType="String"><#=fullPath#></Variable>
	  </Variables>
      <Tasks>
		  
		<Container Name="Pakkens innhold" ForcedExecutionValueDataType="Empty" ConstraintMode="Parallel">
        
          
          <Tasks>
      
      
          <!--Specific task: Create Data flow transformation to load table.-->

        <FileSystem Name="Delete Source Backup File" Operation="DeleteFile">
			<VariableInput VariableName="User.FilePathBakFileDestinationServer"></VariableInput>
		</FileSystem>
			  
		 <# if (PartialOrFull == "FULL") {#>
        <ExecuteSQL Name="Full Backup Source Database" ConnectionName="<#=srvr#>.master">
          <PrecedenceConstraints>
            <Inputs>
              <Input OutputPathName="Delete Source Backup File.Output" />
            </Inputs>
          </PrecedenceConstraints>
          <DirectInput>
BACKUP DATABASE [<#=dbName#>] 

TO  DISK = '<#=fullPath#>'
WITH  COMPRESSION,
COPY_ONLY, 
NOFORMAT, 
NOINIT,  
NAME = N'<#=dbName#>-FULL Database Backup', 
SKIP, 
REWIND, 
NOUNLOAD;
</DirectInput>
        </ExecuteSQL>
			 
		<#} else { //BackupMode = Simpel"#>
			
        <ExecuteSQL Name="Set Recovery Mode to full" ConnectionName="<#=srvr#>.master" ResultSet="SingleRow">
          <PrecedenceConstraints>
            <Inputs>
              <Input OutputPathName="Delete Source Backup File.Output" />
            </Inputs>
          </PrecedenceConstraints>
          <Results>
            <Result Name="CurrentRecoveryMode" VariableName="User.CurrentRecoveryMode" />
          </Results>
          <DirectInput>
DECLARE @RecoveryMode VARCHAR(6) = (SELECT recovery_model_desc AS CurrentRecoveryMode
   FROM sys.databases  
      WHERE name = '<#=dbName#>')

IF @RecoveryMode = 'SIMPLE'
BEGIN
     ALTER DATABASE <#=dbName#>
		SET RECOVERY FULL WITH NO_WAIT
END

SELECT @RecoveryMode AS CurrentRecoveryMode 
			</DirectInput>
        </ExecuteSQL>
        <ExecuteSQL Name="Partial Backup Source Database" ConnectionName="<#=srvr#>.<#=dbName#>">
          <PrecedenceConstraints>
            <Inputs>
              <Input OutputPathName="Set Recovery Mode to full.Output"/>
            </Inputs>
          </PrecedenceConstraints>
          <DirectInput>
     BACKUP DATABASE [<#=dbName#>] 

     <#=fileGroups#>

     TO  DISK = '<#=fullPath#>' 
     
     WITH COMPRESSION,
     COPY_ONLY, 
     NOFORMAT, 
     NOINIT,  
     NAME = N'<#=dbName#> Backup', 
     SKIP, 
     REWIND, 
     NOUNLOAD;
     
    </DirectInput>
        </ExecuteSQL>
			
        <ExecuteSQL Name="Set Source Database to Simple Recovery Mode" ConnectionName="<#=srvr#>.master">
          <PrecedenceConstraints>
            <Inputs>
              <Input OutputPathName="Partial Backup Source Database.Output"/>
            </Inputs>
          </PrecedenceConstraints>
		<Parameters>
			<Parameter DataType="AnsiString" Length="6" Direction="Input" VariableName="User.CurrentRecoveryMode" Name="0"></Parameter>
		</Parameters>
          <DirectInput>
DECLARE @RecoveryMode VARCHAR(6) = ?

IF @RecoveryMode = 'SIMPLE'
BEGIN
	ALTER DATABASE <#=dbName#>
         SET RECOVERY SIMPLE WITH NO_WAIT
END
       </DirectInput>
        </ExecuteSQL>
		<#}#>
	
		
          <!--End of Specific task-->
            
           </Tasks>
      
      
        </Container>
		 
      </Tasks>
	      </Package>
	<#}#>
  </Packages>
  
   
</Biml>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>